#
# SENSORES FECHA Y HORA
#
  - platform: time_date
    display_options:
      - 'date'
      - 'date_time'
      - 'time'

  - platform: uptime
  #  unit_of_measurement: hours => deprecated.

  - platform: moon

# UPS APC
#  - platform: apcupsd
#    resources:
#      - bcharge
#      - loadpct
#      - status
#      - timeleft
#      - model
#      - nominv
#      - nompower
#      - nombattv
#      - starttime

# Sensores Rendimiento de PI y CERT_SSL
#
#  - platform: cert_expiry
#    host: alvareahomy.duckdns.org
#    port: 2309
#
  - platform: command_line
    name: Temperatura CPU
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

  #- platform: command_line
  #  command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  #  name: Versión HA (web)

  - platform: version
    source: local
    name: Versión Local

  - platform: version
    name: Versión Disponible
    source: hassio


  - platform: systemmonitor
    resources:
      - type: load_15m
      - type: processor_use
      - type: memory_use_percent
      - type: memory_use
      - type: memory_free
      - type: swap_use_percent
      - type: last_boot
      - type: disk_use_percent
        arg: /
      - type: disk_use
        arg: /
      - type: disk_free
        arg: /

  - platform: season

  - platform: darksky
    api_key: !secret weather_apikey
    latitude: !secret latitude_home
    longitude: !secret longitude_home
    language: es
    forecast:
      - 1
      - 2
      - 3
      - 4
      - 5
    monitored_conditions:
      - icon
      - summary
      - nearest_storm_distance
      - nearest_storm_bearing
      - humidity
      - temperature
      - temperature_high
      - temperature_low
      - apparent_temperature
      - apparent_temperature_high
      - apparent_temperature_low
      - wind_speed
      - wind_bearing
      - precip_type
      - precip_intensity
      - precip_probability
      - precip_accumulation

  - platform: sql
    db_url: !secret mariadb_url
    scan_interval: 3600
    queries:
      - name: 'MariaDB size'
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant_prod" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB

  - platform: statistics
    name: aemet_rain_24h_mean
    entity_id: sensor.aemet_rain
    state_characteristic: mean
    max_age:
      hours: 24

  - platform: statistics
    name: aemet_rain_24h_max
    entity_id: sensor.aemet_rain
    state_characteristic: value_max
    max_age:
      hours: 24

  - platform: statistics
    name: aemet_rain_24h_min
    entity_id: sensor.aemet_rain
    state_characteristic: value_min
    max_age:
      hours: 24

  - platform: statistics
    name: aemet_rain_24h_total
    entity_id: sensor.aemet_rain
    state_characteristic: total
    max_age:
      hours: 24

  - platform: statistics
    name: aemet_rain_24h_count
    entity_id: sensor.aemet_rain
    state_characteristic: count
    max_age:
      hours: 24

  - platform: statistics
    name: aemet_rain_24h_change
    entity_id: sensor.aemet_rain
    state_characteristic: change
    max_age:
      hours: 24

  #- platform: statistics
  #  name: aemet_rain_24h_datetime_oldest
  #  entity_id: sensor.aemet_rain
  #  state_characteristic: datetime_oldest
  #  max_age:
  #    hours: 24

  # Hora Mínima Inicio Riego Cesped Por Tramos
  - platform: min_max
    name: min_riego_start_time_t1
    type: min
    entity_ids:
      - sensor.riego_cesped_ch1_start_time_t1
      - sensor.riego_cesped_ch2_start_time_t1
      - sensor.riego_cesped_ch3_start_time_t1
      - sensor.riego_cesped_ch4_start_time_t1

  - platform: min_max
    name: min_riego_start_time_t2
    type: min
    entity_ids:
      - sensor.riego_cesped_ch1_start_time_t2
      - sensor.riego_cesped_ch2_start_time_t2
      - sensor.riego_cesped_ch3_start_time_t2
      - sensor.riego_cesped_ch4_start_time_t2

  # Hora Máxima Final Riego Cesped Por Tramos
  - platform: min_max
    name: max_riego_end_time_t1
    type: max
    entity_ids:
      - sensor.riego_cesped_ch1_end_time_t1
      - sensor.riego_cesped_ch2_end_time_t1
      - sensor.riego_cesped_ch3_end_time_t1
      - sensor.riego_cesped_ch4_end_time_t1

  - platform: min_max
    name: max_riego_end_time_t2
    type: max
    entity_ids:
      - sensor.riego_cesped_ch1_end_time_t2
      - sensor.riego_cesped_ch2_end_time_t2
      - sensor.riego_cesped_ch3_end_time_t2
      - sensor.riego_cesped_ch4_end_time_t2

  - platform: template
    sensors:
      # Uptime : nº horas desde último reinicio
      ha_uptime:
        value_template: "{{ ((as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) / 3600) | int}}"
        friendly_name: 'HOMY Uptime'
        icon_template: mdi:map-clock-outline

      # Último Tracking
      family_last_tracking:
        value_template: "{{ states('input_text.family_last_tracking') }}"
        friendly_name: 'Último Tracking'
        icon_template: "{{ 'mdi:home-map-marker' if states('input_text.family_last_tracking') is not none }}"

      ping_wan_internet:
        icon_template: "mdi:speedometer"
        unit_of_measurement: "ms"
        value_template: "{{ state_attr('binary_sensor.ping_00_internet_google', 'round_trip_time_avg')|round(2) }}"

      ping_lan_router:
        icon_template: "mdi:speedometer"
        unit_of_measurement: "ms"
        value_template: "{{ state_attr('binary_sensor.ping_01_router_movistar', 'round_trip_time_avg')|round(2) }}"

      densidad_sensor_humo:
        # smoke_sensor_158d0001fd321c
        friendly_name: 'Densidad Humo Cocina'
        value_template: "{{ states.binary_sensor.smoke_sensor_158d0001fd321c.attributes.Density|int(0) if states.binary_sensor.smoke_sensor_158d0001fd321c is not none }}"
        unit_of_measurement: '%'
        icon_template: mdi:fire

      # Meta tracker AAC, MFC, PAF, AAF
      # meta_track_aac:
      #  value_template: "{{ states('device_tracker.meta_aac') if states('device_tracker.meta_aac') is not none }}"
      #  friendly_name: 'AAC'
      #  entity_picture_template: "{{ states.device_tracker.meta_aac.attributes.entity_picture if states('device_tracker.meta_aac') is not none }}"

      # meta_track_mfc:
      #  value_template: "{{ states('device_tracker.meta_mfc') if states('device_tracker.meta_mfc') is not none }}"
      #  friendly_name: 'MFC'
      #  entity_picture_template: "{{ states.device_tracker.meta_mfc.attributes.entity_picture if states('device_tracker.meta_mfc') is not none }}"

      # meta_track_paf:
      #  value_template: "{{ states('device_tracker.meta_paf') if states('device_tracker.meta_paf') is not none }}"
      #  friendly_name: 'PAF'
      #  entity_picture_template: "{{ states.device_tracker.meta_paf.attributes.entity_picture if states('device_tracker.meta_paf') is not none }}"

      # meta_track_aaf:
      #  friendly_name: 'AAF'
      #  entity_picture_template: "{{ states.device_tracker.meta_aaf.attributes.entity_picture if states('device_tracker.meta_aaf') is not none }}"
      #  value_template: "{{ states('device_tracker.meta_aaf') if is_state('sensor.family_home_aaf','on') and states('device_tracker.meta_aaf') is not none }}"

      # Sensores read-only de configuración on/off Tracking Family Home AAC, MFC, PAF, AAF
      # input_boolean.family_home_mfc,input_boolean.family_home_aac,input_boolean.family_home_paf,input_boolean.family_home_aaf
      #
      family_home_aac:
        value_template: "{{ states('input_boolean.family_home_aac') if states('input_boolean.family_home_aac') is not none }}"
        friendly_name: 'Iphone AAC operativo'
        icon_template: mdi:cellphone-iphone
        #entity_picture_template: "{{ states.device_tracker.meta_aaf.attributes.entity_picture if states('input_boolean.family_home_aac') is not none }}"

      family_home_mfc:
        value_template: "{{ states('input_boolean.family_home_mfc') if states('input_boolean.family_home_mfc') is not none }}"
        friendly_name: 'Iphone MFC operativo'
        icon_template: mdi:cellphone-iphone
        #entity_picture_template: "{{ states.device_tracker.meta_aaf.attributes.entity_picture if states('input_boolean.family_home_mfc') is not none }}"

      family_home_paf:
        value_template: "{{ states('input_boolean.family_home_paf') if states('input_boolean.family_home_paf') is not none }}"
        friendly_name: 'Iphone PAF operativo'
        icon_template: mdi:cellphone-iphone
        #entity_picture_template: "{{ states.device_tracker.meta_aaf.attributes.entity_picture if states('input_boolean.family_home_paf') is not none }}"

      family_home_aaf:
        value_template: "{{ states('input_boolean.family_home_aaf') if states('input_boolean.family_home_aaf') is not none }}"
        friendly_name: 'Iphone AAF operativo'
        icon_template: mdi:cellphone-iphone
        #entity_picture_template: "{{ states.device_tracker.meta_aaf.attributes.entity_picture if states('input_boolean.family_home_aaf') is not none }}"

      # Bayesian Binarysensor tracker AAC, MFC, PAF, AAF ==> Probability
      baye_probability_aac:
        value_template: "{{ ((states.binary_sensor.baye_home_aac.attributes.probability)|float *100)|round(2) }}"
        friendly_name: 'Probabilidad Agustin'
        icon_template: "{{ 'mdi:transit-transfer' if states('binary_sensor.baye_home_aac') is not none }}"
        unit_of_measurement: '%'

      baye_probability_mfc:
        value_template: "{{ ((states.binary_sensor.baye_home_mfc.attributes.probability)|float *100)|round(2) }}"
        friendly_name: 'Probabilidad Malen'
        unit_of_measurement: '%'
        icon_template: "{{ 'mdi:transit-transfer' if states('binary_sensor.baye_home_mfc') is not none }}"

      baye_probability_paf:
        value_template: "{{ ((states.binary_sensor.baye_home_paf.attributes.probability)|float *100)|round(2) }}"
        friendly_name: 'Probabilidad Paloma'
        unit_of_measurement: '%'
        icon_template: "{{ 'mdi:transit-transfer' if states('binary_sensor.baye_home_paf') is not none }}"

      baye_probability_aaf:
        value_template: "{{ ((states.binary_sensor.baye_home_aaf.attributes.probability)|float *100)|round(2) }}"
        friendly_name: 'Probabilidad Agu'
        icon_template: "{{ 'mdi:transit-transfer' if states('binary_sensor.baye_home_aaf') is not none }}"
        unit_of_measurement: '%'

      # Sensor para mostrar Movimientos Xiaomi Magicube:
      # Available events are flip90, flip180, move, tap_twice, shake_air, swing, alert, free_fall and rotate.
      # The component stores the last action as the attribute last_action.
      magiccube_lastaction:
        # binary_sensor.cube_158d00024a4a62
        value_template: "{{ states.binary_sensor.cube_158d00024a4a62.attributes.last_action | string }}"
        friendly_name: 'Magic Cube'
        icon_template: mdi:cube-outline

      vibration_estudio:
        value_template: "{{ states.binary_sensor.vibration_158d0002b15e3b.attributes.last_action | string }}"
        friendly_name: 'Sensor Vibración Rack'
        icon_template: mdi:vibrate

      vibration_salon:
        value_template: "{{ states.binary_sensor.vibration_158d0002a4eacc.attributes.last_action | string }}"
        friendly_name: 'Sensor Vibración Puerta Salón'
        icon_template: mdi:vibrate

      # Sol Próximo Aterdecer
      sun_next_setting:
        value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") }}'
        friendly_name: 'Próxima Puesta de Sol'
        icon_template: "{{ 'mdi:weather-sunset-down' if states('sun.sun') is not none }}"

      # Sol Próximo Amanecer
      sun_next_rising:
        value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%H:%M") }}'
        friendly_name: 'Próxima Salida de Sol'
        icon_template: "{{ 'mdi:weather-sunset-up' if states('sun.sun') is not none }}"
      #
      # CONTROL DEPURADORA PISCINA
      #
      # piscina_depuradora_ch0 Duracion Programa Manual
      piscina_depuradora_ch0_duracion_manual:
        value_template: '00:{{ states.input_number.piscina_depuradora_ch0_manual_minutos.state|int(0) }}:00'
        friendly_name: 'Duración Programa Planificado'
        icon_template: "{{ 'mdi:timer-sand' if states('input_number.piscina_depuradora_ch0_manual_minutos') is not none }}"

      # BORRAR ALVAREA
      #piscina_depuradora_ch0_duracion_programa:
      #  value_template: '{{ states.input_text.piscina_depuradora_ch0_duracion_programa.state }}'
      #  friendly_name: 'Duración Programa Activo'
      #  icon_template: "{{ 'mdi:timer-sand' if states('input_text.piscina_depuradora_ch0_duracion_programa') is not none }}"

      piscina_depuradora_ch0_diario_endtime:
        friendly_name: 'Sensor Hora Finalización'
        icon_template: "{{ 'mdi:timer-sand' if states('input_number.piscina_depuradora_ch0_diario_horas') is not none }}"
        value_template: '{% if states.input_number.piscina_depuradora_ch0_diario_horas.state | int + states.input_datetime.piscina_depuradora_ch0_start_time.attributes.hour | int < 24 %}
                            {{ states.input_number.piscina_depuradora_ch0_diario_horas.state | int + states.input_datetime.piscina_depuradora_ch0_start_time.attributes.hour | int }}:00:00
                         {% else %}
                            {{ states.input_number.piscina_depuradora_ch0_diario_horas.state | int + states.input_datetime.piscina_depuradora_ch0_start_time.attributes.hour | int - 24 }}:00:00
                         {% endif %}'

      piscina_depuradora_ch0_manual_segundos:
        value_template: '{{ states.input_number.piscina_depuradora_ch0_manual_minutos.state |int(0) *60 }}'
        friendly_name: 'Duración Programa Corto (Seg)'
        icon_template: "{{ 'mdi:timer-sand' if states('input_number.piscina_depuradora_ch0_manual_minutos') is not none }}"

      piscina_depuradora_ch0_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.piscina_depuradora_ch0_end_time_t1.attributes.timestamp -  states.input_datetime.piscina_depuradora_ch0_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH0 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.piscina_depuradora_ch0_duracion_planificada_t1') is not none }}"

      piscina_depuradora_ch0_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.piscina_depuradora_ch0_end_time_t2.attributes.timestamp -  states.input_datetime.piscina_depuradora_ch0_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH0 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.piscina_depuradora_ch0_duracion_planificada_t2') is not none }}"

      piscina_depuradora_ch0_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.piscina_depuradora_ch0_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH0 - Programador Tramo-1'

      piscina_depuradora_ch0_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.piscina_depuradora_ch0_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH0 - Duración Tramo-2'

      piscina_depuradora_ch0_duracion_planificada_total:
        value_template: '{{(states.sensor.piscina_depuradora_ch0_duracion_planificada_t1.state|int*states.sensor.piscina_depuradora_ch0_programador_t1_estado.state|int)+(
        states.sensor.piscina_depuradora_ch0_duracion_planificada_t2.state|int*states.sensor.piscina_depuradora_ch0_programador_t2_estado.state|int)}}'
        friendly_name: 'Depuradora Piscina - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.piscina_depuradora_ch0_duracion_planificada_total') is not none }}"


      #
      # CONTROL ESPHOME SW0 (BAS+POW) - RIEGO HUERTO / BONSAIS
      #

      # Bonsais Produccion
      riego_bonsais_ch0_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch0_end_time_t1.attributes.timestamp -  states.input_datetime.riego_bonsais_ch0_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH0 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch0_duracion_planificada_t1') is not none }}"

      riego_bonsais_ch0_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch0_end_time_t2.attributes.timestamp -  states.input_datetime.riego_bonsais_ch0_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH0 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch0_duracion_planificada_t2') is not none }}"

      riego_bonsais_ch0_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch0_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH0 - Programador Tramo-1'

      riego_bonsais_ch0_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch0_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH0 - Duración Tramo-2'

      riego_bonsais_ch0_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_bonsais_ch0_duracion_planificada_t1.state|int*states.sensor.riego_bonsais_ch0_programador_t1_estado.state|int)+(
        states.sensor.riego_bonsais_ch0_duracion_planificada_t2.state|int*states.sensor.riego_bonsais_ch0_programador_t2_estado.state|int)}}'
        friendly_name: 'Bonsais CH0 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch0_duracion_planificada_total') is not none }}"

      # Huerto Tomates
      riego_tomates_ch0_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_tomates_ch0_end_time_t1.attributes.timestamp -  states.input_datetime.riego_tomates_ch0_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Tomates CH0 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch0_duracion_planificada') is not none }}"

      riego_tomates_ch0_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_tomates_ch0_end_time_t2.attributes.timestamp -  states.input_datetime.riego_tomates_ch0_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Tomates CH0 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_tomates_ch0_duracion_planificada_t2') is not none }}"

      riego_tomates_ch0_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_tomates_ch0_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Tomates CH0 - Programador Tramo-1'

      riego_tomates_ch0_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_tomates_ch0_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Tomates CH0 - Programador Tramo-2'

      riego_tomates_ch0_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_tomates_ch0_duracion_planificada_t1.state|int*states.sensor.riego_tomates_ch0_programador_t1_estado.state|int)+
        (states.sensor.riego_tomates_ch0_duracion_planificada_t2.state|int*states.sensor.riego_tomates_ch0_programador_t2_estado.state|int)}}'
        friendly_name: 'Tomates CH0 - Duración Total'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_tomates_ch0_duracion_planificada_total') is not none }}"

      #
      # CONTROL SONOFF ESPHOME_4CH_SW2 - RIEGO BONSAIS + PLANTAS AROMATICAS
      #
      # RIEGO CH1 - Bonsais Top
      riego_bonsais_ch1_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch1_end_time_t1.attributes.timestamp -  states.input_datetime.riego_bonsais_ch1_start_time_t1.attributes.timestamp)/60)|int(0) }}'
        friendly_name: 'Bonsais CH1 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch1_duracion_planificada_t1') is not none }}"

      riego_bonsais_ch1_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch1_end_time_t2.attributes.timestamp -  states.input_datetime.riego_bonsais_ch1_start_time_t2.attributes.timestamp)/60)|int(0) }}'
        friendly_name: 'Bonsais CH1 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch1_duracion_planificada_t2') is not none }}"

      riego_bonsais_ch1_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch1_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH1 - Programador Tramo-1'

      riego_bonsais_ch1_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch1_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH1 - Programador Tramo-2'

      riego_bonsais_ch1_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_bonsais_ch1_duracion_planificada_t1.state|int*states.sensor.riego_bonsais_ch1_programador_t1_estado.state|int)+
        (states.sensor.riego_bonsais_ch1_duracion_planificada_t2.state|int*states.sensor.riego_bonsais_ch1_programador_t2_estado.state|int)}}'
        friendly_name: 'Bonsais CH1 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch1_duracion_planificada_total') is not none }}"

      # RIEGO CH1 - Plantas Aromáticas
      riego_bonsais_ch2_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch2_end_time_t1.attributes.timestamp -  states.input_datetime.riego_bonsais_ch2_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH2 - Duración Tramo-1 Planificado (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch2_duracion_planificada_t1') is not none }}"

      riego_bonsais_ch2_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch2_end_time_t2.attributes.timestamp -  states.input_datetime.riego_bonsais_ch2_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH2 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch2_duracion_planificada_t2') is not none }}"

      riego_bonsais_ch2_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch2_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH2 - Programador Tramo-1'

      riego_bonsais_ch2_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_bonsais_ch2_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Bonsais CH2 - Programador Tramo-2'

      riego_bonsais_ch2_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_bonsais_ch2_duracion_planificada_t1.state|int*states.sensor.riego_bonsais_ch2_programador_t1_estado.state|int)+
        (states.sensor.riego_bonsais_ch2_duracion_planificada_t2.state|int*states.sensor.riego_bonsais_ch2_programador_t2_estado.state|int)}}'
        friendly_name: 'Bonsais CH2 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch2_duracion_planificada_total') is not none }}"

      # Fuente Zen
      riego_bonsais_ch3_duracion_planificada:
        value_template: '{{ "{:}".format((states.input_datetime.riego_bonsais_ch3_end_time.attributes.timestamp -  states.input_datetime.riego_bonsais_ch3_start_time.attributes.timestamp)/60)|int }}'
        friendly_name: 'Bonsais CH3 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_bonsais_ch3_duracion_planificada') is not none }}"

      #
      # CONTROL ESPHOME_4CH_SW3 - RIEGO CESPED
      #

      # CH1 Duracion Programa Diario-Semanal
      riego_cesped_ch1_start_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t1.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch1_start_time_t1') is not none }}"

      riego_cesped_ch1_end_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t1.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch1_end_time_t1') is not none }}"

      riego_cesped_ch1_start_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t2.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch1_start_time_t2') is not none }}"

      riego_cesped_ch1_end_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t2.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch1_end_time_t2') is not none }}"

      riego_cesped_ch1_start_time_t3:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t3.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-3'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch1_start_time_t3') is not none }}"

      riego_cesped_ch1_end_time_t3:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t3.state }}'
        friendly_name: 'Cesped CH1 - Start Time Tramo-3'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch1_end_time_t3') is not none }}"

      riego_cesped_ch1_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch1_end_time_t1.attributes.timestamp -  states.input_datetime.riego_cesped_ch1_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH1 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch1_duracion_planificada_t1') is not none }}"

      riego_cesped_ch1_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch1_end_time_t2.attributes.timestamp -  states.input_datetime.riego_cesped_ch1_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH1 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch1_duracion_planificada_t2') is not none }}"

      riego_cesped_ch1_duracion_planificada_t3:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch1_end_time_t3.attributes.timestamp -  states.input_datetime.riego_cesped_ch1_start_time_t3.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH1 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch1_duracion_planificada_t3') is not none }}"

      riego_cesped_ch1_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch1_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH1 - Programador Tramo-1'

      riego_cesped_ch1_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch1_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH1 - Programador Tramo-2'

      riego_cesped_ch1_programador_t3_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch1_programador_t3','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH1 - Programador Tramo-3'

      riego_cesped_ch1_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_cesped_ch1_duracion_planificada_t1.state|int*states.sensor.riego_cesped_ch1_programador_t1_estado.state|int)
        +(states.sensor.riego_cesped_ch1_duracion_planificada_t2.state|int*states.sensor.riego_cesped_ch1_programador_t2_estado.state|int)
        +(states.sensor.riego_cesped_ch1_duracion_planificada_t3.state|int*states.sensor.riego_cesped_ch1_programador_t3_estado.state|int)}}'
        friendly_name: 'Cesped CH1 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch1_duracion_planificada_total') is not none }}"

      # CH2 Duracion Programa Diario-Semanal
      riego_cesped_ch2_start_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t1.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch2_start_time_t1') is not none }}"

      riego_cesped_ch2_end_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t1.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch2_end_time_t1') is not none }}"

      riego_cesped_ch2_start_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t2.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch2_start_time_t2') is not none }}"

      riego_cesped_ch2_end_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t2.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch2_end_time_t2') is not none }}"

      riego_cesped_ch2_start_time_t3:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t3.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-3'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch2_start_time_t3') is not none }}"

      riego_cesped_ch2_end_time_t3:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t3.state }}'
        friendly_name: 'Cesped ch2 - Start Time Tramo-3'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch2_end_time_t3') is not none }}"

      riego_cesped_ch2_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch2_end_time_t1.attributes.timestamp -  states.input_datetime.riego_cesped_ch2_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH2 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch2_duracion_planificada_t1') is not none }}"

      riego_cesped_ch2_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch2_end_time_t2.attributes.timestamp -  states.input_datetime.riego_cesped_ch2_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH2 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch2_duracion_planificada_t2') is not none }}"

      riego_cesped_ch2_duracion_planificada_t3:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch2_end_time_t3.attributes.timestamp -  states.input_datetime.riego_cesped_ch2_start_time_t3.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH2 - Duración Tramo-3 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch2_duracion_planificada_t3') is not none }}"

      riego_cesped_ch2_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch2_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH2 - Programador Tramo-1'

      riego_cesped_ch2_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch2_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH2 - Programador Tramo-2'

      riego_cesped_ch2_programador_t3_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch2_programador_t3','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH2 - Programador Tramo-3'

      riego_cesped_ch2_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_cesped_ch2_duracion_planificada_t1.state|int*states.sensor.riego_cesped_ch2_programador_t1_estado.state|int)
        +(states.sensor.riego_cesped_ch2_duracion_planificada_t2.state|int*states.sensor.riego_cesped_ch2_programador_t2_estado.state|int)
        +(states.sensor.riego_cesped_ch2_duracion_planificada_t3.state|int*states.sensor.riego_cesped_ch2_programador_t3_estado.state|int)
        }}'
        friendly_name: 'Cesped CH2 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch2_duracion_planificada_total') is not none }}"

      # CH3 Duracion Programa Diario-Semanal
      riego_cesped_ch3_start_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t1.state }}'
        friendly_name: 'Cesped ch3 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch3_start_time_t1') is not none }}"

      riego_cesped_ch3_end_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t1.state }}'
        friendly_name: 'Cesped ch3 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch3_end_time_t1') is not none }}"

      riego_cesped_ch3_start_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t2.state }}'
        friendly_name: 'Cesped ch3 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch3_start_time_t2') is not none }}"

      riego_cesped_ch3_end_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t2.state }}'
        friendly_name: 'Cesped ch3 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch3_end_time_t2') is not none }}"

      riego_cesped_ch3_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch3_end_time_t1.attributes.timestamp -  states.input_datetime.riego_cesped_ch3_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH3 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch3_duracion_planificada_t1') is not none }}"

      riego_cesped_ch3_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch3_end_time_t2.attributes.timestamp -  states.input_datetime.riego_cesped_ch3_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH3 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch3_duracion_planificada_t2') is not none }}"

      riego_cesped_ch3_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch3_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH3 - Programador Tramo-1'

      riego_cesped_ch3_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch3_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH3 - Programador Tramo-1'

      riego_cesped_ch3_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_cesped_ch3_duracion_planificada_t1.state|int*states.sensor.riego_cesped_ch3_programador_t1_estado.state|int)+
        (states.sensor.riego_cesped_ch3_duracion_planificada_t2.state|int*states.sensor.riego_cesped_ch3_programador_t2_estado.state|int)}}'
        friendly_name: 'Cesped CH3 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch3_duracion_planificada_total') is not none }}"

      # CH4 Duracion Programa Diario-Semanal
      riego_cesped_ch4_start_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t1.state }}'
        friendly_name: 'Cesped ch4 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch4_start_time_t1') is not none }}"

      riego_cesped_ch4_end_time_t1:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t1.state }}'
        friendly_name: 'Cesped ch4 - Start Time Tramo-1'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch4_end_time_t1') is not none }}"

      riego_cesped_ch4_start_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_start_time_t2.state }}'
        friendly_name: 'Cesped ch4 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-play-outline' if states('sensor.riego_cesped_ch4_start_time_t2') is not none }}"

      riego_cesped_ch4_end_time_t2:
        value_template: '{{ states.input_datetime.riego_bonsais_ch0_end_time_t2.state }}'
        friendly_name: 'Cesped ch4 - Start Time Tramo-2'
        icon_template: "{{ 'mdi:timer-stop-outline' if states('sensor.riego_cesped_ch4_end_time_t2') is not none }}"

      riego_cesped_ch4_duracion_planificada_t1:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch4_end_time_t1.attributes.timestamp -  states.input_datetime.riego_cesped_ch4_start_time_t1.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH4 - Duración Tramo-1 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch4_duracion_planificada_t1') is not none }}"

      riego_cesped_ch4_duracion_planificada_t2:
        value_template: '{{ "{:}".format((states.input_datetime.riego_cesped_ch4_end_time_t2.attributes.timestamp -  states.input_datetime.riego_cesped_ch4_start_time_t2.attributes.timestamp)/60)|int }}'
        friendly_name: 'Cesped CH4 - Duración Tramo-2 (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch4_duracion_planificada_t2') is not none }}"

      riego_cesped_ch4_programador_t1_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch4_programador_t1','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH4 - Programador Tramo-1'

      riego_cesped_ch4_programador_t2_estado:
        value_template: "{% if is_state('input_boolean.riego_cesped_ch4_programador_t2','on')%}1{%else%}0{%endif%}"
        friendly_name: 'Cesped CH4 - Programador Tramo-1'

      riego_cesped_ch4_duracion_planificada_total:
        value_template: '{{(states.sensor.riego_cesped_ch4_duracion_planificada_t1.state|int*states.sensor.riego_cesped_ch4_programador_t1_estado.state|int)+
        (states.sensor.riego_cesped_ch4_duracion_planificada_t2.state|int*states.sensor.riego_cesped_ch4_programador_t2_estado.state|int)}}'
        friendly_name: 'Cesped CH4 - Duración Total (Min)'
        icon_template: "{{ 'mdi:timer-sand' if states('sensor.riego_cesped_ch4_duracion_planificada_total') is not none }}"

      #
      # Sensores Timezone
      #
      now_tzinfo:
        friendly_name: 'Time Zone Info'
        value_template: "{{ now().tzinfo }}"
        icon_template: mdi:map-clock

      now_astimezone:
        friendly_name: 'Time Zone Actual'
        value_template: "{{ now().astimezone().tzinfo }}"
        icon_template: mdi:map-clock-outline

      now_astimezone_time:
        friendly_name: 'Time Zone Hora'
        value_template: "{{ now().astimezone() }}"
        icon_template: mdi:clock-time-eight

      # {{utcnow() }}
      # {{now() }}
      # {{ utcnow().astimezone() }}
      # {{ now().astimezone() }}
      # {{ utcnow().tzinfo }}
      # {{ now().tzinfo }}
      # {{ now().astimezone().tzinfo }}
      #

      # offset: "+03:30:00"   # Horario Invierno CET = UTC+1  => 18:30 + 3:30 = 22:00
      # offset: "+00:30:00"   # Horario Verano   DST = UTC+2  => 21:30 + 0:30 = 22:00
      sun_offset:
        friendly_name: 'Offset Puesta Sol Estación'
        icon_template: mdi:weather-sunset
        value_template: '{% if now().astimezone().tzinfo | string == "CET" %} "+03:30:00"
                         {% else %} "+00:30:00"
                         {% endif %}'

      #sun_season:
      #  friendly_name: 'Offset Puesta Sol Estación'
      # value_template: "{{ sensor.season }}"
      #   icon_template: >
      #    '{% if is_state("sensor.season", "autumn") %}
      #      mdi:leaf
      #    {% elif is_state("sensor.season", "winter") %}
      #      mdi:snowflake
      #    {% elif is_state("sensor.season", "spring") %}
      #      mdi:flower
      #    {% elif is_state("sensor.season", "summer") %}
      #      mdi:sunglasses
      #    {% else %}
      #      mdi:cloud
      #    {% endif %}'

      temp_interior:
        friendly_name: 'Temperatura Interior Media'
        icon_template: mdi:thermometer-lines
        unit_of_measurement: 'ºC'
        value_template: >
          {{
          ((
           states('sensor.temperature_158d00022b65ff')|float(0) + 
           states('sensor.temperature_158d0002d79546')|float(0) +
           states('sensor.temperature_158d00022c6a47')|float(0) +
           states('sensor.temperature_158d0002e97092')|float(0) +
           states('sensor.temperature_158d00025efda4')|float(0) 
          ) / 5)|round(1)
          }}
      # hvac_modes: off, heat, dry, cool, fan_only, heat_cool
      melcloud_estudio_state:
        friendly_name: 'AC/Estudio'
        icon_template: mdi:air-conditioner
        value_template: "{{states('climate.aa_estudio') }}"

      # fan-speed-1,-2,-3, fan-off, fan-alert, fan-auto
      melcloud_estudio_fan_mode:
        friendly_name: 'Fan Mode (1-4-auto)'
        icon_template: mdi:fan
        value_template: "{{state_attr('climate.aa_estudio','fan_mode') }}"

      # swing-mode y vane_v (vertical) controla el movimiento de aspas.  Vane_H no se usa.
      # Modo Frio, 26º, fan auto, vane horizontal entre 15:00 - 16:00
      #   - [ ] Vane V: 1_up
      #   - [ ] Swing Mode: 1_up
      # Modo Frio, 26º, fan auto, vane horizontal a las 16:00
      #   - [ ] Vane V: 2
      #   - [ ] Swing Mode: 2
      # Modo Frio, 26º, fan auto, vane horizontal entre 16:00 - 17:00
      #   - [ ] Vane V: 3
      #   - [ ] Swing Mode: 3
      # Modo Frio, 26º, fan auto, vane horizontal a las  17:00
      #   - [ ] Vane V: 4
      #   - [ ] Swing Mode: 4
      # Modo Frio, 26º, fan auto, vane hacia abajo a las 17:30
      #   - [ ] Vane V: 5_down
      #   - [ ] Swing Mode: 5_down

      melcloud_estudio_swing_mode:
        friendly_name: 'Swing Mode (1-5-swing)'
        icon_template: mdi:sync
        value_template: "{{state_attr('climate.aa_estudio','swing_mode') }}"

      #
      # Predicción Metereologica AEMET
      #
      # Conversion Fecha datetime a formato DiaSemana, DD-MM
      # {{ as_timestamp(strptime(states('sensor.aemet_datetime_0d'),'%Y-%m-%d %H:%M:%S')) | timestamp_custom("%A,%d-%m") }}
      #

      # HOY
      aemet_icono_0d:
        friendly_name: "Tiempo Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.condition }}"
        icon_template: >-
          {% if is_state('sensor.aemet_icono_0d','rainy') %} mdi:weather-rainy
          {% elif is_state('sensor.aemet_icono_0d','weather-partly-rainy') %} mdi:weather-partly-rainy
          {% elif is_state('sensor.aemet_icono_0d','lightning') %} mdi:weather-lightning
          {% elif is_state('sensor.aemet_icono_0d','cloudy') %} mdi:weather-cloudy
          {% elif is_state('sensor.aemet_icono_0d','partlycloudy') %} mdi:weather-partly-cloudy
          {% elif is_state('sensor.aemet_icono_0d','nightpartlycloudy') %} mdi:weather-night-partly-cloudy
          {% elif is_state('sensor.aemet_icono_0d','sunny') %} mdi:weather-sunny
          {% else %} mdi:sun-wireless
          {% endif %}

      aemet_datetime_0d:
        friendly_name: "Datetime Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.datetime }}"

      aemet_fecha_0d:
        friendly_name: "Fecha Hoy"
        #value_template: "{{ as_timestamp(strptime(state_attr('weather.aemet_daily','forecast').0.datetime,'%Y-%m-%d %H:%M:%S'),0) | timestamp_custom('%A,%d-%m') }}"
        value_template: "{{ as_timestamp(state_attr('weather.aemet_daily','forecast').0.datetime) | timestamp_custom('%A,%d-%m') }}"

      aemet_lluvia_0d:
        friendly_name:  "%Probabilidad Lluvia Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.precipitation_probability }}"

      aemet_max_temperatura_0d:
        friendly_name: "Temperatura Max Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.temperature }}"

      aemet_min_temperatura_0d:
        friendly_name: "Temperatura Min Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.templow }}"

      aemet_min_viento_0d:
        friendly_name: "Viento Hoy"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').0.wind_speed }}"

      # MAÑANA
      aemet_icono_1d:
        friendly_name: "Tiempo Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.condition }}"
        icon_template: >-
          {% if is_state('sensor.aemet_icono_1d','rainy') %} mdi:weather-rainy
          {% elif is_state('sensor.aemet_icono_1d','weather-partly-rainy') %} mdi:weather-partly-rainy
          {% elif is_state('sensor.aemet_icono_1d','lightning') %} mdi:weather-lightning
          {% elif is_state('sensor.aemet_icono_1d','cloudy') %} mdi:weather-cloudy
          {% elif is_state('sensor.aemet_icono_1d','partlycloudy') %} mdi:weather-partly-cloudy
          {% elif is_state('sensor.aemet_icono_1d','nightpartlycloudy') %} mdi:weather-night-partly-cloudy
          {% elif is_state('sensor.aemet_icono_1d','sunny') %} mdi:weather-sunny
          {% else %} mdi:sun-wireless
          {% endif %}

      aemet_datetime_1d:
        friendly_name: "Datetime Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.datetime }}"

      aemet_fecha_1d:
        friendly_name: "Fecha Mañana"
        #value_template: "{{ as_timestamp(strptime(state_attr('weather.aemet_daily','forecast').1.datetime,'%Y-%m-%d %H:%M:%S'),0) | timestamp_custom('%A,%d-%m') }}"
        value_template: "{{ as_timestamp(state_attr('weather.aemet_daily','forecast').1.datetime) | timestamp_custom('%A,%d-%m') }}"

      aemet_lluvia_1d:
        friendly_name:  "%Probabilidad Lluvia Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.precipitation_probability }}"

      aemet_max_temperatura_1d:
        friendly_name: "Temperatura Max Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.temperature }}"

      aemet_min_temperatura_1d:
        friendly_name: "Temperatura Min Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.templow }}"

      aemet_min_viento_1d:
        friendly_name: "Viento Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').1.wind_speed }}"

      # PASADO MAÑANA
      aemet_icono_2d:
        friendly_name: "Tiempo Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.condition }}"
        icon_template: >-
          {% if is_state('sensor.aemet_icono_2d','rainy') %} mdi:weather-rainy
          {% elif is_state('sensor.aemet_icono_2d','weather-partly-rainy') %} mdi:weather-partly-rainy
          {% elif is_state('sensor.aemet_icono_2d','lightning') %} mdi:weather-lightning
          {% elif is_state('sensor.aemet_icono_2d','cloudy') %} mdi:weather-cloudy
          {% elif is_state('sensor.aemet_icono_2d','partlycloudy') %} mdi:weather-partly-cloudy
          {% elif is_state('sensor.aemet_icono_2d','nightpartlycloudy') %} mdi:weather-night-partly-cloudy
          {% elif is_state('sensor.aemet_icono_2d','sunny') %} mdi:weather-sunny
          {% else %} mdi:sun-wireless
          {% endif %}

      aemet_datetime_2d:
        friendly_name: "Datetime Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.datetime }}"

      aemet_fecha_2d:
        friendly_name: "Fecha Pasado Mañana"
        #value_template: "{{ as_timestamp(strptime(state_attr('weather.aemet_daily','forecast').2.datetime,'%Y-%m-%d %H:%M:%S'),0) | timestamp_custom('%A,%d-%m') }}"
        value_template: "{{ as_timestamp(state_attr('weather.aemet_daily','forecast').2.datetime) | timestamp_custom('%A,%d-%m') }}"

      aemet_lluvia_2d:
        friendly_name:  "%Probabilidad Lluvia Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.precipitation_probability }}"

      aemet_max_temperatura_2d:
        friendly_name: "Temperatura Max Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.temperature }}"

      aemet_min_temperatura_2d:
        friendly_name: "Temperatura Min Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.templow }}"

      aemet_min_viento_2d:
        friendly_name: "Viento Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').2.wind_speed }}"

      # HOY + 3 dias
      aemet_icono_3d:
        friendly_name: "Tiempo Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.condition }}"
        icon_template: >-
          {% if is_state('sensor.aemet_icono_3d','rainy') %} mdi:weather-rainy
          {% elif is_state('sensor.aemet_icono_3d','weather-partly-rainy') %} mdi:weather-partly-rainy
          {% elif is_state('sensor.aemet_icono_3d','lightning') %} mdi:weather-lightning
          {% elif is_state('sensor.aemet_icono_3d','cloudy') %} mdi:weather-cloudy
          {% elif is_state('sensor.aemet_icono_3d','partlycloudy') %} mdi:weather-partly-cloudy
          {% elif is_state('sensor.aemet_icono_3d','nightpartlycloudy') %} mdi:weather-night-partly-cloudy
          {% elif is_state('_sensor.aemet_icono_3d','sunny') %} mdi:weather-sunny
          {% else %} mdi:sun-wireless
          {% endif %}

      aemet_datetime_3d:
        friendly_name: "Datetime Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.datetime }}"

      aemet_fecha_3d:
        friendly_name: "Fecha Pasado Mañana"
        #value_template: "{{ as_timestamp(strptime(state_attr('weather.aemet_daily','forecast').3.datetime,'%Y-%m-%d %H:%M:%S'),0) | timestamp_custom('%A,%d-%m') }}"
        value_template: "{{ as_timestamp(state_attr('weather.aemet_daily','forecast').3.datetime) | timestamp_custom('%A,%d-%m') }}"

      aemet_lluvia_3d:
        friendly_name:  "%Probabilidad Lluvia Pasado Mañana"
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.precipitation_probability }}"

      aemet_max_temperatura_3d:
        friendly_name: "Temperatura Max Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.temperature }}"

      aemet_min_temperatura_3d:
        friendly_name: "Temperatura Min Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.templow }}"

      aemet_min_viento_3d:
        friendly_name: "Viento Pasado Mañana "
        value_template: "{{ state_attr('weather.aemet_daily','forecast').3.wind_speed }}"